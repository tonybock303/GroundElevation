@model GroundElevation.Models.HomeViewModel

<head>
    <meta charset="utf-8">
    <title>Get coordinates of the mouse pointer</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.1.1/mapbox-gl.css" rel="stylesheet">
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.1.1/mapbox-gl.js"></script>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 0;
            bottom: 0;
            right: 0;
            left: 0;
            width: 100%;
            height:auto;
        }

        #info {
            display: none;
            position: relative;
            margin: 0px auto;
            width: 50%;
            padding: 10px;
            border: none;
            border-radius: 3px;
            font-size: 12px;
            text-align: center;
            color: #222;
            background: #fff;
        }
    </style>
</head>
<div id="map"></div>
@*<pre id="info"></pre>*@

@{
    var startLng = Model.StartCoordsLng;
    var startLat = Model.StartCoordsLat;
    var finishLng = Model.FinishCoordsLng;
    var finishLat = Model.FinishCoordsLat;
    var midLng = Model.MidCoordLng;
    var midLat = Model.MidCoordLat;
    var totalDistance = Model.TotalDistance;
    var numUp = (totalDistance * 1000);
    var zoom =  numUp * 0.75;
}

<script>
    $(document).ready(function () {
        console.log("@midLng, @midLat");
            mapboxgl.accessToken = 'pk.eyJ1IjoidGhlcGhvZW5peDI1IiwiYSI6ImNrbTR6M3h0bzA5ZXgyeGtuY2ZnMjB6cnoifQ.lvIzFpjHc1uKMGWWywoUNA';
            @*
            var map = new mapboxgl.Map({
                container: 'map', // container id
                style: 'mapbox://styles/mapbox/streets-v11',
                center: [@midLng, @midLat], // starting position
                zoom: 15 // starting zoom
            });*@


            var map = new mapboxgl.Map({
                container: 'map',
                zoom: @zoom,
                center: [@midLng, @midLat],
                pitch: 45,
                bearing: 80,
                style: 'mapbox://styles/mapbox/outdoors-v11'
            });
            map.on('load', function () {
                map.addSource('mapbox-dem', {
                    'type': 'raster-dem',
                    'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',
                    'tileSize': 512,
                    'maxzoom': 17
                });
                // add the DEM source as a terrain layer with exaggerated height
                map.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1 });

                // add a sky layer that will show when the map is highly pitched
                map.addLayer({
                    'id': 'sky',
                    'type': 'sky',
                    'paint': {
                        'sky-type': 'atmosphere',
                        'sky-atmosphere-sun': [0.0, 0.0],
                        'sky-atmosphere-sun-intensity': 15
                    }
                });
            });



            var startMarker = new mapboxgl.Marker({
                color: "#00FF00",
                draggable: true
            })
                .setLngLat([@startLng, @startLat])
                .addTo(map);

            var finishMarker = new mapboxgl.Marker({
                color: "#FF0000",
                draggable: true
            })
                .setLngLat([@finishLng, @finishLat])
                .addTo(map);

            var startCoords = document.getElementById('StartCoords');
            var finishCoords = document.getElementById('FinishCmidLatords');

            function onStartDragEnd() {
                var lngLat = startMarker.getLngLat();
                var coordsText = lngLat.lat + "," + lngLat.lng;
                startCoords.value = coordsText;
            };
            function onFinishDragEnd() {
                var lngLat = finishMarker.getLngLat();
                var coordsText = lngLat.lat + "," + lngLat.lng;
                finishCoords.value = coordsText;
            };

            startMarker.on('dragend', onStartDragEnd);
            finishMarker.on('dragend', onFinishDragEnd);
        });
</script>
